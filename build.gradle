buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name "CB Repo"
        url "http://chickenbones.net/maven/"
    }
   //  maven { // the repo from which to get BR    //Lets try the repo way for a bit
   //      name "BR Repo"
   //     url "http://beyondrealitypack.com/maven2"
   //  }
}

apply plugin: 'forge'
apply plugin: 'java'

ext.configFile = file "gradle.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

configurations {
    //we do not want to have jfxrt.jar in the classpath when creating the jar,
    //therefore a seperate configuration is required
    providedCompile
}

dependencies {
    //compile "com.dyonovan.teambrcore:TeamBRCore:+:dev"
    compile project(":OpenModsLib")
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:dev"
    compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"
    compile "mcp.mobius.waila:Waila:1.5.9_dev1_1.7.10"
    providedCompile files("/usr/java/jdk1.7.0_51/lib/jfxrt.jar") //Required for JavaFX
}

version = "${config.minecraft_version}-${config.mod_version}-B" + System.getenv("BUILD_NUMBER")
group= "com.dyonovan.modernalchemy" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ModernAlchemy"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = config.minecraft_version + "-" + config.forge_version

    replaceIn "Constants.java"
    replace "@VERSION@", "${config.mod_version}"
    replace "@LIB_VERSION@", "${config.BRTeamCore_version}"

    runDir = "eclipse"
}

compileJava {
    //add required JavaFX libs to compile classpath
    sourceSets.main.compileClasspath += configurations.providedCompile
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


